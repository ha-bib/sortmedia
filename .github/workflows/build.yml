name: Build Python APK

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-apk:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Install dependencies
      run: |
        sudo apt update
        sudo apt install -y python3 python3-pip unzip zip libffi-dev libssl-dev \
            libsqlite3-dev zlib1g-dev libbz2-dev libreadline-dev libncurses5-dev \
            libncursesw5-dev libgdbm-dev liblzma-dev libgmp-dev openjdk-17-jdk wget curl
        pip install --upgrade pip
        pip install buildozer cython virtualenv

    - name: Set up Android SDK
      run: |
        mkdir -p /usr/local/lib/android/sdk
        export ANDROID_SDK_ROOT=/usr/local/lib/android/sdk
        curl -fo sdk.zip https://dl.google.com/android/repository/commandlinetools-linux-11076708_latest.zip
        unzip -q sdk.zip -d $ANDROID_SDK_ROOT/cmdline-tools
        mv $ANDROID_SDK_ROOT/cmdline-tools/cmdline-tools $ANDROID_SDK_ROOT/cmdline-tools/latest
        yes | $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager --licenses
        $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager "platform-tools" "platforms;android-34" "build-tools;36.0.0"

    - name: Build APK
      env:
        ANDROIDSDK: /usr/local/lib/android/sdk
        ANDROID_NDK_HOME: /usr/local/lib/android/ndk
        PATH: /usr/local/lib/android/sdk/platform-tools:/usr/local/lib/android/sdk/cmdline-tools/latest/bin:$PATH
      run: |
        buildozer android debug

    - name: Upload APK artifact
      uses: actions/upload-artifact@v4
      with:
        name: myapp-apk
        path: bin/*.apk
